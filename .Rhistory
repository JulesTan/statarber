terms = panel.read(file = term.file,verbose = verbose)
terms[is.na(terms)] <- 0
coefd <- as.integer(dimnames(coef)[[1]])
coefd <- coefd[max(1, which(coefd <= d) -lag)]
if(gsub('\\d+','', group.name)=='G'){
}
if(order > 1 & length(alpha.name)==1){
new.term.list = llply(2:order, function(o){
tmp <- terms^o
dimnames(tmp)[[4]] <- paste0(dimnames(terms)[[4]],'.',o)
tmp
})
temrs <- panel.combine(append(list(terms), new.term.list))
}else if(order>1 & length(alpha.name)!=1){
stop('high order mode is only compatible with 1 dependant varialbe')
}
alpha.v <- aperm(aaply(terms, 2:3, function(KV){
if(is.null(dim(KV))){
KV <- t(t(KV))
dimnames(KV)[[2]] <- dimnames(terms)[[4]]
dimnames(KV)[[1]] <- dimnames(terms)[[1]]
}
if(group.name == 'EACH'){
common.keys <- intersect(dimnames(KV)[[1]], dimnames(coef)[['G']])
alpha <- abind(llply(dimnames(coef)$Y, function(y){
alpha.y <- aaply(KV[common.keys, dimnames(coef)$X[-1] * adrop(coef[as.character(coefd), common.keys, -1, y, model, drop = FALSE])])
}))
}else if(group.name == 'ALL'){
beta <- adrop(coef[as.character(coefd), group.name, -1,, model, drop = FALSE], c(1,2,5))
alpha <- KV[,rownames(beta), drop = FALSE] %*% beta
}else if(gsub){
common.keys <- intersect()
}
}, .parallel = cores > 1, .drop = FALSE), c(3,1,2,4))
dimnames(alpha.v)[[4]] <- alpha.names
names(dimnames(alpha.v)) <- c('K','D','T','V')
if(alpha.only) return(alpha.v)
dir.create(dirname(alpha.file), FALSE, TRUE)
panel.write(alpha.v, alpha.file, verbose = verbose, overwrite = !use.cache)
alpha.file
}, .parallel = cores > 1)
alpha.file <- sub('YYYYMMDD', d, alpha.path)
term.file <- sub('YYYYMMDD', d, term.path)
terms = panel.read(file = term.file,verbose = verbose)
terms[is.na(terms)] <- 0
coefd <- as.integer(dimnames(coef)[[1]])
coefd <- coefd[max(1, which(coefd <= d) -lag)]
if(gsub('\\d+','', group.name)=='G'){
}
if(order > 1 & length(alpha.name)==1){
new.term.list = llply(2:order, function(o){
tmp <- terms^o
dimnames(tmp)[[4]] <- paste0(dimnames(terms)[[4]],'.',o)
tmp
})
temrs <- panel.combine(append(list(terms), new.term.list))
}else if(order>1 & length(alpha.name)!=1){
stop('high order mode is only compatible with 1 dependant varialbe')
}
alpha.v <- aperm(aaply(terms, 2:3, function(KV){
if(is.null(dim(KV))){
KV <- t(t(KV))
dimnames(KV)[[2]] <- dimnames(terms)[[4]]
dimnames(KV)[[1]] <- dimnames(terms)[[1]]
}
if(group.name == 'EACH'){
common.keys <- intersect(dimnames(KV)[[1]], dimnames(coef)[['G']])
alpha <- abind(llply(dimnames(coef)$Y, function(y){
alpha.y <- aaply(KV[common.keys, dimnames(coef)$X[-1] * adrop(coef[as.character(coefd), common.keys, -1, y, model, drop = FALSE])])
}))
}else if(group.name == 'ALL'){
beta <- adrop(coef[as.character(coefd), group.name, -1,, model, drop = FALSE], c(1,2,5))
alpha <- KV[,rownames(beta), drop = FALSE] %*% beta
}else if(gsub){
common.keys <- intersect()
}
}, .parallel = cores > 1, .drop = FALSE), c(3,1,2,4))
dimnames(alpha.v)[[4]] <- alpha.names
names(dimnames(alpha.v)) <- c('K','D','T','V')
if(alpha.only) return(alpha.v)
dir.create(dirname(alpha.file), FALSE, TRUE)
!use.cache
dim(alpha.v)
panel.write(alpha.v, alpha.file, verbose = verbose, overwrite = !use.cache)
overwrite <- TRUE
file <- alpha.file
data <- alpha.v
mode <- ifelse(overwrite, 'w', 'w-')
f <- h5file(file, mode)
library(h5)
f <- h5file(file, mode)
gc()
?h5file()
mode
file
f <- h5file(file, mode)
panel.write <- function(data, file, key = 'ndarray', dircreate = FALSE, verbose = TRUE, overwrite = FALSE){
mode <- ifelse(overwrite, 'w', 'w-')
if(dircreate == TRUE) dir.create(dirname(file), FALSE, TRUE)
if(verbose) print(paste('Writing:', file))
if(file.exists(file) && overwrite == FALSE) stop('Error: file exist, please set overwrite = TRUE')
if(mode == 'w' && file.exists(file)) file.remove(file) ## I don't known why 'w' break down, fix this issue
f <- h5file(file, mode)
f[key] <- data
h5attr(f, 'dim') <- dim(data)
h5attr(f, 'names') <- names(dimnames(data))
for(i in seq_len(length(dim(data)))){
f[paste0('dimnames_',i)] <- dimnames(data)[[i]]
}
# for(i in seq_len(length(dim(data)))){
#   h5attr(f,paste0('dimnames_',i)) <- dimnames(data)[[i]]
# }
h5close(f)
invisible(TRUE)
}
panel.write(alpha.v, alpha.file, verbose = verbose, overwrite = !use.cache)
panel.write(alpha.v, alpha.file, verbose = verbose, overwrite = !use.cache)
library(statarber)
gen.alp.on.coef(getTradingDayRange(20150701,20170501),x,'~/data/',model = 'ALL', group.name = 'ALL', term.path = '~/data/alpha/CHINA_STOCK/DAILY/alphaHL/YYYYMMDD.h5',alpha.only = FALSE, use.cache = FALSE, alpha.path = '~/data/alpha/CHINA_STOCK/DAILY/f1/YYYYMMDD.h5')
rm(gen.alp.on.coef)
gen.alp.on.coef(getTradingDayRange(20150701,20170501),x,'~/data/',model = 'ALL', group.name = 'ALL', term.path = '~/data/alpha/CHINA_STOCK/DAILY/alphaHL/YYYYMMDD.h5',alpha.only = FALSE, use.cache = FALSE, alpha.path = '~/data/alpha/CHINA_STOCK/DAILY/f1/YYYYMMDD.h5')
x <- panel.read('~/data/alpha/CHINA_STOCK/DAILY/f1/20150701.h5')
dim(x)
dimnames(x)
library(statarber)
f <- list.files('~/data/alpha/CHINA_STOCK/DAILY/f1/',all.files = TRUE)[1]
f
f <- list.files('~/data/alpha/CHINA_STOCK/DAILY/f1/', full.names = TRUE)[1]
f
a <- panel.read(f)
dimnames(a)
library(statarber)
for(f in list.files('~/data/alpha/CHINA_STOCK/DAILY/f1/', full.names = TRUE)){
a <- panel.read(f)
dimnames(a)$V <- 'f1'
gc()
panel.write(a,f,overwrite = TRUE)
}
f
a <- panel.read(f)
dim(a)
a <- a^2
dim(a)
dimnames(a)
library(statarber)
for(f in list.files('~/data/alpha/CHINA_STOCK/DAILY/f1/', full.names = TRUE)){
a <- panel.read(f)
a <- a^2
dimnames(a)$V <- 'f2'
gc()
panel.write(a,paste0('~/data/alpha/CHINA_STOCK/DAILY/f2/',basename(f)),dircreate = TRUE)
}
f
a <- panel.read(f)
a <- a^2
dimnames(a)$V <- 'f2'
gc()
gc()
library(statarber)
library(hdf5r)
?hdf5r
??hdf5r
library(statarber)
library(hdf5r)
?H5T_ARRAY
library(h5)
library(hdf5r)
library(h5)
panel.read <- function(file, verbose = TRUE){
if(verbose) print(paste('Reading:',file))
f <- h5file(file,'r')
dim <- h5attr(f,'dim')
names <- h5attr(f, 'names')
dimnames <- list()
for(i in seq_len(length(dim))){
dimnames[[names[i]]] <- f[[paste0('dimnames_',i)]][]
}
# for(i in seq_len(length(dim))){
#   dimnames[[names[i]]] <- h5attr(f,paste0('dimnames_',i))
# }
a <- f[['ndarray']][]
dimnames(a) <- dimnames
h5close(f)
return(a)
}
a <- panel.read('~/data/alpha/CHINA_STOCK/DAILY/alphaHL/20150506.h5')
panel.read <- function(file, verbose = TRUE){
if(verbose) print(paste('Reading:',file))
f <- h5file(file,'r')
dim <- h5attr(f,'dim')
names <- h5attr(f, 'names')
dimnames <- list()
for(i in seq_len(length(dim))){
dimnames[[names[i]]] <- f[paste0('dimnames_',i)][]
}
# for(i in seq_len(length(dim))){
#   dimnames[[names[i]]] <- h5attr(f,paste0('dimnames_',i))
# }
a <- f['ndarray'][]
dimnames(a) <- dimnames
h5close(f)
return(a)
}
a <- panel.read('~/data/alpha/CHINA_STOCK/DAILY/alphaHL/20150506.h5')
a1 <- panel.read('~/data/alpha/CHINA_STOCK/DAILY/alphaHL/20150506.h5')
a2 <- panel.read('~/data/alpha/CHINA_STOCK/DAILY/alphaHL/20150507.h5')
panel.combine <- function(panel.list, default = NA){
if(!is.list(panel.list)){
stop('should pass a list of panel into this functions')
}
panel.list <- panel.list[!unlist(lapply(panel.list, is.null))]
if(length(panel.list)==1){ ## to avoid error in Reduce when only given x
return(panel.list[[1]])
}else{
names <- Reduce(function(x,y) union(names(dimnames(x)), names(dimnames(y))), panel.list)
dnames <- lapply(names, function(x){
Reduce(union,lapply(panel.list,function(panel) dimnames(panel)[[x]]))
})
names(dnames) <- names
out <- array(default, dim = sapply(dnames, length),
dimnames = dnames)
for(panel in panel.list){
if(length(dimnames(panel))==4){ # faster for 4-dim, which is the most common situation
out[dimnames(panel)[[1]],
dimnames(panel)[[2]],
dimnames(panel)[[3]],
dimnames(panel)[[4]]] <- panel
}else{
idx <- as.matrix(do.call(CJ, dimnames(panel)))
out[idx] <- panel[idx]
}
}
return(out)
}
}
#' comvert n-dim array to data.frame by specific rule
#' @description
#' @param panel
#'
#' @return
#' @export
#'
#' @examples
library(abind)
a <- panel.combine(list(a1, a2))
dim(a)
detach("package:h5", unload=TRUE)
panel.write <- function(data, file, key = 'ndarray', dircreate = FALSE, verbose = TRUE, overwrite = FALSE){
mode <- ifelse(overwrite, 'w', 'w-')
if(dircreate == TRUE) dir.create(dirname(file), FALSE, TRUE)
if(verbose) print(paste('Writing:', file))
if(file.exists(file) && overwrite == FALSE) stop('Error: file exist, please set overwrite = TRUE')
if(mode == 'w' && file.exists(file)) file.remove(file) ## I don't known why 'w' break down, fix this issue
f <- h5file(file, mode)
f[key] <- data
h5attr(f, 'dim') <- dim(data)
h5attr(f, 'names') <- names(dimnames(data))
for(i in seq_len(length(dim(data)))){
f[[paste0('dimnames_',i)]] <- dimnames(data)[[i]]
}
# for(i in seq_len(length(dim(data)))){
#   h5attr(f,paste0('dimnames_',i)) <- dimnames(data)[[i]]
# }
h5close(f)
invisible(TRUE)
}
panel.write(a, '~/test.h5')
panel.write <- function(data, file, key = 'ndarray', dircreate = FALSE, verbose = TRUE, overwrite = FALSE){
mode <- ifelse(overwrite, 'w', 'w-')
if(dircreate == TRUE) dir.create(dirname(file), FALSE, TRUE)
if(verbose) print(paste('Writing:', file))
if(file.exists(file) && overwrite == FALSE) stop('Error: file exist, please set overwrite = TRUE')
if(mode == 'w' && file.exists(file)) file.remove(file) ## I don't known why 'w' break down, fix this issue
f <- h5file(file, mode)
f[[key]] <- data
h5attr(f, 'dim') <- dim(data)
h5attr(f, 'names') <- names(dimnames(data))
for(i in seq_len(length(dim(data)))){
f[[paste0('dimnames_',i)]] <- dimnames(data)[[i]]
}
# for(i in seq_len(length(dim(data)))){
#   h5attr(f,paste0('dimnames_',i)) <- dimnames(data)[[i]]
# }
h5close(f)
invisible(TRUE)
}
panel.write(a, '~/test.h5')
panel.write(a, '~/test.h5')
library(h5)
f <- h5file('~/test.h5','r')
f
h5close(f)
detach("package:h5", unload=TRUE)
f <- h5file('~/test.h5','r')
f
h5attr(f[['ndarray']],'dataset.dims')
?hdf5r::guess_dim()
?guess_dim()
hdf5r::list.attributes(f)
hdf5r::list.attributes(f[['ndarray']])
?hdf5r::readDataSet
?hdf5r::subset_assign_h5.H5D
dim(a)
panel.read <- function(file, verbose = TRUE){
if(verbose) print(paste('Reading:',file))
f <- h5file(file,'r')
dim <- h5attr(f,'dim')
names <- h5attr(f, 'names')
dimnames <- list()
for(i in seq_len(length(dim))){
dimnames[[names[i]]] <- f[paste0('dimnames_',i)][]
}
# for(i in seq_len(length(dim))){
#   dimnames[[names[i]]] <- h5attr(f,paste0('dimnames_',i))
# }
a <- f['ndarray'][]
dimnames(a) <- dimnames
h5close(f)
return(a)
}
a <- .GlobalEnv$panel.read('~/data/md/CHINA_STOCK/DAILY/test/20130403.h5')
library(h5)
a <- .GlobalEnv$panel.read('~/data/md/CHINA_STOCK/DAILY/test/20130403.h5')
dim(a)
View(a)
View(a[,,,])
detach("package:h5", unload=TRUE)
library("hdf5r", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
panel.read <- function(file, verbose = TRUE){
if(verbose) print(paste('Reading:',file))
f <- h5file(file,'r')
names <- h5attr(f, 'names')
dimnames <- list()
for(i in seq_len(length(names))){
dimnames[[names[i]]] <- readDataSet(f[[paste0('dimnames_',i)]])
}
# for(i in seq_len(length(dim))){
#   dimnames[[names[i]]] <- h5attr(f,paste0('dimnames_',i))
# }
a <- readDataSet(f[['ndarray']])
dim(a) <- f[['ndarray']]$dims
dimnames(a) <- dimnames
h5close(f)
return(a)
}
detach("package:h5", unload=TRUE)
a <- .GlobalEnv$panel.read('~/data/md/CHINA_STOCK/DAILY/test/20130403.h5')
panel.write <- function(data, file, key = 'ndarray', dircreate = FALSE, verbose = TRUE, overwrite = FALSE){
mode <- ifelse(overwrite, 'w', 'w-')
if(dircreate == TRUE) dir.create(dirname(file), FALSE, TRUE)
if(verbose) print(paste('Writing:', file))
if(file.exists(file) && overwrite == FALSE) stop('Error: file exist, please set overwrite = TRUE')
#if(mode == 'w' && file.exists(file)) file.remove(file) ## I don't known why 'w' break down, fix this issue
f <- h5file(file, mode)
f[[key]] <- data
h5attr(f, 'names') <- names(dimnames(data))
for(i in seq_len(length(dim(data)))){
f[[paste0('dimnames_',i)]] <- dimnames(data)[[i]]
}
# for(i in seq_len(length(dim(data)))){
#   h5attr(f,paste0('dimnames_',i)) <- dimnames(data)[[i]]
# }
h5close(f)
invisible(TRUE)
}
panel.write(a,'~/test.h5')
panel.write(a,'~/test.h5', overwrite = TRUE)
a2 <- panel.read('~/test.h5')
dim(a2)
identical(a,a2)
panel.read <- function(file, verbose = TRUE){
if(verbose) print(paste('Reading:',file))
f <- h5file(file,'r')
dim <- h5attr(f,'dim')
names <- h5attr(f, 'names')
dimnames <- list()
for(i in seq_len(length(dim))){
dimnames[[names[i]]] <- f[paste0('dimnames_',i)][]
}
# for(i in seq_len(length(dim))){
#   dimnames[[names[i]]] <- h5attr(f,paste0('dimnames_',i))
# }
a <- f['ndarray'][]
dimnames(a) <- dimnames
h5close(f)
return(a)
}
detach("package:hdf5r", unload=TRUE)
library("h5", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
library("statarber", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
detach("package:statarber", unload=TRUE)
a <- .GlobalEnv$panel.read('~/data/md/CHINA_STOCK/DAILY/test/20130403.h5')
library(statarber)
panel.read <- function(file, verbose = TRUE){
if(verbose) print(paste('Reading:',file))
f <- h5::h5file(file,'r')
dim <- h5::h5attr(f,'dim')
names <- h5::h5attr(f, 'names')
dimnames <- list()
for(i in seq_len(length(dim))){
dimnames[[names[i]]] <- f[paste0('dimnames_',i)][]
}
# for(i in seq_len(length(dim))){
#   dimnames[[names[i]]] <- h5attr(f,paste0('dimnames_',i))
# }
a <- f['ndarray'][]
dimnames(a) <- dimnames
h5::h5close(f)
return(a)
}
#' write n-dim array to h5 file
#'
#' @param data
#' @param file
#' @param key
#' @param dircreate
#' @param verbose
#' @param overwrite
#'
#' @return
#' @export
#'
#' @examples
#' a <- array(1:12,dim = c(1,4,1,3), dimnames = list(S = 'a', D = 20180103:20180106,T='15:00:00.000',C=c('x','y','z')))
#' panel.write(a, '~/test.h5')
panel.write <- function(data, file, key = 'ndarray', dircreate = FALSE, verbose = TRUE, overwrite = FALSE){
mode <- ifelse(overwrite, 'w', 'w-')
if(dircreate == TRUE) dir.create(dirname(file), FALSE, TRUE)
if(verbose) print(paste('Writing:', file))
if(file.exists(file) && overwrite == FALSE) stop('Error: file exist, please set overwrite = TRUE')
if(mode == 'w' && file.exists(file)) file.remove(file) ## I don't known why 'w' break down, fix this issue
f <- h5::h5file(file, mode)
f[[key]] <- data
h5::h5attr(f, 'dim') <- dim(data)
h5::h5attr(f, 'names') <- names(dimnames(data))
for(i in seq_len(length(dim(data)))){
f[[paste0('dimnames_',i)]] <- dimnames(data)[[i]]
}
# for(i in seq_len(length(dim(data)))){
#   h5attr(f,paste0('dimnames_',i)) <- dimnames(data)[[i]]
# }
h5::h5close(f)
invisible(TRUE)
}
library(hdf5r)
detach("package:hdf5r", unload=TRUE)
detach("package:h5", unload=TRUE)
library("hdf5r", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
library(hdf5r)
for(f in list.files('~/data/',full.names = TRUE, recursive = TRUE)){
a <- .GlobalEnv$panel.read(f)
panel.write(a,f,overwrite = TRUE)
}
library(statarber)
library(hdf5r)
library(statarber)
for(f in list.files('~/data/',full.names = TRUE, recursive = TRUE)){
a <- .GlobalEnv$panel.read(f)
statarber::panel.write(a,f,overwrite = TRUE)
}
a
rm(a)
a <- .GlobalEnv$panel.read(f)
library(hdf5r)
library(statarber)
for(f in list.files('~/data/',full.names = TRUE, recursive = TRUE, pattern = '.h5')){
a <- .GlobalEnv$panel.read(f)
statarber::panel.write(a,f,overwrite = TRUE)
}
overwrite = TRUE
mode <- ifelse(overwrite, 'w', 'w-')
dircreate = FALSE
verbose = TRUE
if(dircreate == TRUE) dir.create(dirname(file), FALSE, TRUE)
if(verbose) print(paste('Writing:', file))
file <- f
f
if(verbose) print(paste('Writing:', file))
file.exists(file) && overwrite == FALSE
f <- h5file(file, mode)
mode
file
h5close(f)
f <- h5file(file, mode)
?h5file
f <- h5file("/home/wujt/data//alpha/CHINA_STOCK/DAILY/alphaHL/20150506.h5", mode)
f <- h5file("/home/wujt/data//alpha/CHINA_STOCK/DAILY/alphaHL/20150507.h5", mode)
f
h5close(f)
library(hdf5r)
library(statarber)
for(f in list.files('~/data/',full.names = TRUE, recursive = TRUE, pattern = '.h5')){
a <- .GlobalEnv$panel.read(f)
gc()
statarber::panel.write(a,f,overwrite = TRUE)
}
dim(a)
dimnames(a)
library(hdf5r)
library(statarber)
for(f in list.files('~/data/',full.names = TRUE, recursive = TRUE, pattern = '.h5')){
a <- .GlobalEnv$panel.read(f)
gc()
file.remove(f)
statarber::panel.write(a,f,overwrite = TRUE)
}
dim(a)
gc()
file.exits(f)
file.exist(f)
file.exists(f)
?try
